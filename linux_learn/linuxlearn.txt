linux learn

#in .profile for all users
#in .bashrc 
export PATH=$PATH:~


export JAVA_HOME=/usr/local/java/jdk1.6.0_30  
export JRE_HOME=/usr/local/java/jdk1.6.0_30/jre  
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH  
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$JAVA_HOME:$PATH  


#run immediately 
source ~/.bashrc
 
#learn tar zip
tar -zx -f *.tar.gz
tar -xvf *.tar
tar zvxf *.tar.gz

#recover my files
grep -a  -B 10 -A 500 'charpter one' /dev/sda1 > tmp.txt
chmod 755
cp	 #fuzhi
mv 1.txt 2.txt	#rename
rm -f 	#del a file
rm -rf	 #del all file and folder
dpkg -S packagename #know the location
find / -name python
jobs #see if has program run in background
poweroff #close
reboot 

#upload
scp /home/yao/linuxlearn.txt root@45.63.124.217:/root/newupdate.txt 
#download
scp zhangying@192.168.1.5:/var/www/zhangying/test.sql /home/zhangy/database_bak/

#kill a process
ps -ef | grep ss-qt5 #find ss-qt5 info
pgrep ss-qt5
kill -s 9 1234
ps -ef|grep ss-qt5 | grep -v grep | cut -c 9-15| xargs kill -s 9

ctrl+z #put a job back and stop
& #put a job back and run
jobs #see bakground jobs
fg 1 #bring the job forward
bg 2 #make the job background run

#net
netstat -n #not jiexi -t tcp -l listening
-p progress
nm-tool #more advanced

#mysql learn
mysqladmin shutdown -p
mysqld start
edit my /ect/mysql/my.cnf

#vimlearn
ggVGg?	#something interesting
Ctrl+r =2+2 #useful command
:ab asap as soon as possible
ctrl + n	#zi dong bu quan
di(	#to delect the thing in ()  such as di" di{ di[
zz #lower case make the text middle 
ctrl + z #pause   press fg return 
$ # move to the end of line
add & after the application #can use it without the console
y #copy yy copy current line
p # paste 

:20,23 !sort #means subsitute the 20-23 with the result
:20,23 w !sort #means not substitute

#duo hang ti huan
#yuan wen shi :.,+3 s/^/#/g
:10,13 s/^/#
:.,+3 s/^/# 

#suo jin 
< #shift+tab
> #tab

#ubuntu 默认.deb
alien .rpm #zidong zhuanhuawei .deb
dpkg -i .deb
dpkg -l #show all
dpkg -r #remove


du -sh /home 


开机启动
/etc/rc.local



#/etc/rc.local   添加一个开机启动项 nohup 更加高端的 &
nohup bash /usr/local/bin/dl.sh>/home/yaoge/shlog.txt &

#安装.deb
sudo dpkg -i app.deb
#卸载 app
sudo dpkg -r app


修改dns
1.vim /etc/resolvconf/resolv.conf.d/base 
    nameserver 8.8.8.8
sudo resolvconf -u

或ubuntu14.04
2.vim /run/resolvconf/interface/NetworkManager 
    nameserver 8.8.8.8



shell 中正则
shell 中的通配符：
*： 代表 0 个或者多个任意字符
?： 代表一定有一个的任意字符
[]： 代表一定有一个在括号内的字符（非任意字符）。例如[abcd]代表一定有一个字符，可能是 abcd 这四个选项的任意一个。
[-]：若邮件韩在括号内时，代表在编码顺序内的所有自负。例如：[0-9]代表 0 到 9 之间的所有数字，因为数字的语系编码是连续的。
[^]： 若括号内的第一个字符为指数字符(^)，那表示反向选择，例如：[^abc]代表一定有一个字符，只要是非 abc 的其他字符就可以。

shell中的特殊字符：
#：注释字符
\：将特殊字符或者通配符还原成一般字符
|：管道符，分割两个管线命令的界定
;：连续命令下达分隔符
~：用户的家目录
$：放在变量前面，正确使用变量
&：工作控制，将命令编程背景下工作
!：非(!)的意思，逻辑运算符
>,>>：输出重定向，分别是覆盖和追加
<,<<：输入重定向
‘’：单引号，不具有变量置换的功能
“”：双引号，具有变量置换的功能
()：在中间的为子 shell 的起始与结束
{]：在中间为命令块的组合

shell 中正则表达式的控制字符
^：匹配行首位置
$：匹配行尾位置
.：匹配任意祖父
*：对*之前的匹配整体或字符匹配任意次（包括 0 次）
\?：对\?之前的匹配整体或字符匹配 0 次或 1 次
\{n\}: 对 \ { 之前的匹配整体或字符匹配 n 次
\{m,\}: 对 \ { 之前的匹配整体或字符匹配至少 m 次
\{m,n}: 对 \ { 之前的匹配整体或字符匹配 m 到 n 次
[abcdef]: 对单字符而言匹配[]中的字符
[a-z]： 对单字符而言，匹配任意一个小写字母
[^a-z]：不匹配括号中的内容


gz 解压
gzip -d *.gz

resolvconf -u
修改base生效


