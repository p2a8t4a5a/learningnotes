#新建用户
create user 'freeweb'@'localhost' identified by '122'
create user 'freeweb'@'192.168.%' identified by '122'
create user 'yaoge'@'%' identified by '123456'

grant select,insert,update,create,alter on web_db.* to 'freeweb'@'localhost';
grant all on wantjrdb.* to 'wantjruser'@'localhost';

LOCK TABLES

flush privileges;

# 有时候问题是bind-address = 127.0.0.1 不能访问

# MySQL数据类型   含义
char(n)     固定长度，最多255个字符
varchar(n)  固定长度，最多65535个字符
tinytext    可变长度，最多255个字符
text    可变长度，最多65535个字符
mediumtext  可变长度，最多2的24次方-1个字符
longtext    可变长度，最多2的32次方-1个字符

date    日期 '2008-12-2'
time    时间 '12:25:36'
datetime    日期时间 '2008-12-2 22:06:44'
timestamp   自动存储记录修改时间





# create trigger
create table student_log(
    id int not null auto_increment,
    message char(100) ,
    date timestamp null DEFAULT CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
    primary key (id));



CREATE TABLE `eo_api_cache_log` (
  `cacheID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `projectID` int(10) unsigned NOT NULL,
  `groupID` int(10) unsigned NOT NULL,
  `apiID` int(10) unsigned NOT NULL,
  `apiJson` longtext NOT NULL,
  `starred` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`cacheID`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;


DELIMITER $$
CREATE TRIGGER price_update BEFORE UPDATE ON sells
FOR EACH ROW 
BEGIN 
IF(NEW.beer_price > OLD.beer_price + 1) THEN  
INSERT INTO ripo_off_bar (beer_name) VALUES (NEW.beer_name);
END IF;
END;$$


drop trigger eo_api_cache_trigger_insert;
delimiter $$
create trigger eo_api_cache_trigger_insert after insert  on eo_api_cache
for each row
    insert into eo_api_cache_log(projectID,operate,groupID,apiID,apiJson,starred) values (new.projectID,'INSERT',new.groupID,new.apiID,new.apiJson,new.starred);
$$
delimiter ;

drop trigger eo_api_cache_trigger_update;
delimiter $$
create trigger eo_api_cache_trigger_update after update on eo_api_cache
for each row
    insert into eo_api_cache_log(projectID,operate,groupID,apiID,apiJson,starred) values (new.projectID,'UPDATE',new.groupID,new.apiID,new.apiJson,new.starred);
$$
delimiter ;

drop trigger eo_api_cache_trigger_delete;
delimiter $$
create trigger eo_api_cache_trigger_delete before delete on eo_api_cache
for each row
    insert into eo_api_cache_log(projectID,operate,groupID,apiID,apiJson,starred) values (old.projectID,'DELETE',old.groupID,old.apiID,old.apiJson,old.starred);
$$
delimiter ;





insert into test values(16,1016,'yaoge16 ');
select * from test;
select * from student_log;


alter table abc 
ADD column_name datatype
DROP COLUMN column_name
MODIFY column_name datatype
CHANGE column_name_old column_name char(50);


# rename mysql database name 
for table in `mysql -u root -p123456 -sNe "show tables from mysql_learn"`;do mysql -u root -p123456 -sNe "rename table mysql_learn.$table to learn.$table"; done;



drop index_aaa on table_aaa;


index
