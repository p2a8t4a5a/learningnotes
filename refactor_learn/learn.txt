
如果你发现自己需要为程序添加一个特性，而代码结构是你无法方便地达成目的，
那就先重构那个程序，使特性的添加比较容易的进行，然后再添加特性。

# 重构的第一步: 建立一组可靠的测试环境

重构就是以微小的步伐修改程序。如果你犯下错误，很容易便可发现它，所以方便易用的测试环境特别重要

函数应该放在使用数据的对象内 => Move Method
临时变量如果没有被修改，可以尝试用方法赋值 => Replace Temp with query   # 有争议

一个对象不能在生命周期改变自己的分类，所以尝试使用子类来实现 => ReplaceTyepCodeWithState + MoveMethod + ReplaceConditionalWithPolymorphism


========================================================================================================================================
RULES:
1. 重复代码 => ExtractMethod || PullUpMethod
2. 长得离谱的代码 => 通常有注释的地方就可以变成一个新的函数，然后用函数名来解释 => 有循环的地方 => 有条件表达式 => Extract Method  
3. 过大的类 => 提取类 || 提取子类
4. 过长的参数列表 => 用object代替 || 用函数代替, 某个参数可能直接用函数获取
5. 某个类往不同的方向上发展 => 拆成两个类
6. 一个功能要修改不同的类 => 合成一个类





